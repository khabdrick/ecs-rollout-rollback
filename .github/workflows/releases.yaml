name: Deploy to ECS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push Docker image
        run: |
          docker build -t khabdrick/ecsproject:${{ github.sha }} .
          docker push khabdrick/ecsproject:${{ github.sha }}
          echo "IMAGE_TAG=khabdrick/ecsproject:${{ github.sha }}" >> $GITHUB_ENV

      - name: Install AWS CLI
        run: sudo apt-get update && sudo apt-get install -y awscli

      - name: Configure AWS CLI
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set region ${{ secrets.AWS_REGION }}

      - name: Register new task definition revision
        run: |
          aws ecs register-task-definition \
            --cli-input-json file://task-definition.json \
            --container-definitions '[
                {
                    "name": "mongo",
                    "image": "mongo:latest",
                    "cpu": 0,
                    "memory": 2048,
                    "portMappings": [
                        {
                            "containerPort": 27017,
                            "hostPort": 27017,
                            "protocol": "tcp"
                        }
                    ],
                    "essential": true,
                    "environment": [
                        {
                            "name": "MONGO_INITDB_ROOT_USERNAME",
                            "value": "mongo"
                        },
                        {
                            "name": "MONGO_INITDB_ROOT_PASSWORD",
                            "value": "password"
                        }
                    ],
                    "mountPoints": [
                        {
                            "sourceVolume": "mongo-mount",
                            "containerPath": "/data/db",
                            "readOnly": false
                        }
                    ],
                    "logConfiguration": {
                        "logDriver": "awslogs",
                        "options": {
                            "awslogs-group": "/ecs/ecsproject_task",
                            "awslogs-create-group": "true",
                            "awslogs-region": "us-east-1",
                            "awslogs-stream-prefix": "ecs"
                        }
                    }
                },
                {
                    "name": "project_container",
                    "image": "${{ env.IMAGE_TAG }}",
                    "cpu": 0,
                    "portMappings": [
                        {
                            "containerPort": 3000,
                            "hostPort": 3000,
                            "protocol": "tcp"
                        }
                    ],
                    "essential": false,
                    "environment": [
                        {
                            "name": "MONGO_USER",
                            "value": "mongo"
                        },
                        {
                            "name": "MONGO_IP",
                            "value": "localhost"
                        },
                        {
                            "name": "MONGO_PORT",
                            "value": "27017"
                        },
                        {
                            "name": "MONGO_PASSWORD",
                            "value": "password"
                        }
                    ]
                }
            ]' \
            --output json > new-task-def.json

      - name: Update ECS service to use new task definition
        run: |
          NEW_TASK_DEF_ARN=$(jq -r '.taskDefinition.taskDefinitionArn' new-task-def.json)
          aws ecs update-service \
            --cluster ${{ secrets.ECS_CLUSTER }} \
            --service ${{ secrets.ECS_SERVICE }} \
            --task-definition $NEW_TASK_DEF_ARN
